{
  "version": "1.0",
  "tags": {
    "master": {
      "name": "master",
      "description": "Primary backlog for EasyMeal",
      "tasks": [
        {
          "id": 1,
          "title": "Scaffold Next.js + TS + Tailwind",
          "description": "Create Next.js app with TypeScript, Tailwind, App Router, strict mode.",
          "acceptanceCriteria": [
            "npm run dev boots",
            "Tailwind classes render",
            "App Router enabled"
          ],
          "estimate": "S",
          "priority": "P0",
          "dependencies": [],
          "assignee": "Student",
          "status": "done"
        },
        {
          "id": 2,
          "title": "ESLint + Prettier strict config",
          "description": "Add Prettier, ESLint rules (a11y, hooks, import), format scripts.",
          "acceptanceCriteria": [
            "npm run lint passes",
            "Prettier formats on save and in CI"
          ],
          "estimate": "S",
          "priority": "P0",
          "dependencies": [
            1
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 3,
          "title": "Layout + responsive shell",
          "description": "app/layout.tsx with header/nav/footer, 3 breakpoints, focus styles.",
          "acceptanceCriteria": [
            "Mobile/tablet/desktop verified",
            "Keyboard focus visible"
          ],
          "estimate": "S",
          "priority": "P0",
          "dependencies": [
            1,
            2
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 4,
          "title": "TanStack Query provider wiring",
          "description": "Add QueryClientProvider in root, devtools enabled in dev.",
          "acceptanceCriteria": [
            "Provider wraps app",
            "Devtools visible in dev"
          ],
          "estimate": "XS",
          "priority": "P0",
          "dependencies": [
            1
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 5,
          "title": "IngredientInput (tags + keyboard)",
          "description": "Accessible input for adding/removing ingredient tags; chip UI; suggestions.",
          "acceptanceCriteria": [
            "Add via Enter/comma",
            "Remove via Backspace",
            "Tab/arrow keys work",
            "Screen-reader labels present"
          ],
          "estimate": "M",
          "priority": "P0",
          "dependencies": [
            3
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 6,
          "title": "TheMealDB client (fetch helpers)",
          "description": "Helpers for filter by ingredient and lookup by id; typed responses; abortable.",
          "acceptanceCriteria": [
            "AbortController used",
            "Types validated",
            "200/4xx/5xx handled"
          ],
          "estimate": "M",
          "priority": "P0",
          "dependencies": [
            4
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 7,
          "title": "Multi-ingredient search orchestrator",
          "description": "Fan-out filter calls per ingredient, compute intersection/relaxed union with match score; debounced.",
          "acceptanceCriteria": [
            "Results ranked by match score",
            "Debounce 300ms",
            "Cancellations work"
          ],
          "estimate": "M",
          "priority": "P0",
          "dependencies": [
            6
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 8,
          "title": "Client-side caching layer",
          "description": "Cache results by tag-set key; TTL; hydrate from cache; stale-while-revalidate.",
          "acceptanceCriteria": [
            "Repeats within TTL avoid network",
            "SWR behavior works"
          ],
          "estimate": "M",
          "priority": "P1",
          "dependencies": [
            7
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 9,
          "title": "ResultsGrid + Card",
          "description": "Responsive grid; card with image, name, match score, favorite button; skeletons.",
          "acceptanceCriteria": [
            "1–4 columns across breakpoints",
            "Skeletons during loading",
            "Alt text on images"
          ],
          "estimate": "M",
          "priority": "P0",
          "dependencies": [
            3,
            7
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 10,
          "title": "Recipe detail route/modal",
          "description": "Deep-linkable detail with image, ingredients, steps; actions (favorite, add to shopping).",
          "acceptanceCriteria": [
            "Deep-link URL works",
            "From card opens detail",
            "Back restores scroll"
          ],
          "estimate": "M",
          "priority": "P0",
          "dependencies": [
            6,
            9
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 11,
          "title": "Shopping list (localStorage) + export/print",
          "description": "Add ingredients with checkboxes; persist; export text/print-friendly.",
          "acceptanceCriteria": [
            "Items persist across reloads",
            "Print layout clean",
            "Clear all works"
          ],
          "estimate": "M",
          "priority": "P1",
          "dependencies": [
            10
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 12,
          "title": "Favorites (localStorage)",
          "description": "Toggle favorite from card/detail; favorites list page; persistence.",
          "acceptanceCriteria": [
            "Favorited meals persist",
            "Favorites page loads correctly"
          ],
          "estimate": "S",
          "priority": "P1",
          "dependencies": [
            9,
            10
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 13,
          "title": "Settings (units/dietary toggle)",
          "description": "Simple settings page; unit display; heuristic dietary filter (e.g., vegetarian).",
          "acceptanceCriteria": [
            "Setting stored",
            "Filters applied to results",
            "Accessible form"
          ],
          "estimate": "S",
          "priority": "P2",
          "dependencies": [
            7,
            9
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 14,
          "title": "Error/empty states + random suggestions",
          "description": "Friendly messages; retry; suggest random meals when no match.",
          "acceptanceCriteria": [
            "Network error state with retry",
            "Empty state shows suggestions"
          ],
          "estimate": "S",
          "priority": "P0",
          "dependencies": [
            7,
            9
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 15,
          "title": "Accessibility pass",
          "description": "ARIA roles/labels, keyboard traversal, color contrast, skip links.",
          "acceptanceCriteria": [
            "Axe: no serious/critical",
            "Keyboard-only usable"
          ],
          "estimate": "S",
          "priority": "P0",
          "dependencies": [
            5,
            9,
            10
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 16,
          "title": "Performance tuning",
          "description": "Next/Image, lazy loading, code-split detail, prefetch on hover, memoization.",
          "acceptanceCriteria": [
            "Lighthouse Performance ≥ 90",
            "No major CLS/LCP regressions"
          ],
          "estimate": "S",
          "priority": "P1",
          "dependencies": [
            9,
            10
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 17,
          "title": "SEO & shareable pages",
          "description": "Metadata (title/desc/OG) per recipe; social preview fallback images.",
          "acceptanceCriteria": [
            "metadata exported",
            "Sharing a detail URL shows correct preview"
          ],
          "estimate": "S",
          "priority": "P2",
          "dependencies": [
            10
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 18,
          "title": "Testing baseline (Jest/RTL + Cypress)",
          "description": "Configure Jest/RTL; 3 unit tests (input, orchestrator, card); 2 e2e specs (search flow, detail).",
          "acceptanceCriteria": [
            "npm test passes",
            "npx cypress run passes"
          ],
          "estimate": "M",
          "priority": "P0",
          "dependencies": [
            5,
            7,
            9,
            10
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 19,
          "title": "CI workflow (lint/build/test)",
          "description": "GitHub Actions to run lint, build, unit tests, Cypress headless.",
          "acceptanceCriteria": [
            "CI green on PR",
            "Caches node_modules",
            "Artifacts saved on failure"
          ],
          "estimate": "S",
          "priority": "P0",
          "dependencies": [
            1,
            2,
            18
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 20,
          "title": "Deploy to Vercel + README/screenshots",
          "description": "Connect repo; prod build; README with setup, env, scripts, screenshots, demo URL.",
          "acceptanceCriteria": [
            "Live URL available",
            "README updated with screenshots",
            "Lighthouse ≥ 85",
            "EcoIndex noted"
          ],
          "estimate": "S",
          "priority": "P0",
          "dependencies": [
            9,
            10,
            14,
            16
          ],
          "assignee": "Student",
          "status": "pending"
        }
      ]
    },
    "sprint-0": {
      "name": "sprint-0",
      "description": "Sprint 0 — Project scaffolding & core UX",
      "tasks": [
        {
          "id": 1,
          "title": "Create Next.js app (TS + Tailwind + App Router)",
          "description": "Scaffold project with TypeScript, Tailwind, ESLint.",
          "acceptanceCriteria": [
            "Dev server runs",
            "Tailwind working",
            "Repo initialized"
          ],
          "estimate": "1h",
          "priority": "P0",
          "dependencies": [],
          "assignee": "Student",
          "status": "pending",
          "details": "Commands:\n\n# Scaffold Next.js (TypeScript, Tailwind, ESLint, App Router)\nnpx create-next-app@latest easymeal --ts --tailwind --eslint --app --src-dir --use-npm --import-alias \"@/*\"\ncd easymeal\n\n# Install TanStack Query\nnpm install @tanstack/react-query @tanstack/react-query-devtools\n\n# Testing (Jest/RTL + Cypress)\nnpm install -D jest @testing-library/react @testing-library/jest-dom @testing-library/user-event jest-environment-jsdom ts-node next @types/jest cypress\nnpx cypress install\n\n# Linting/Prettier extras\nnpm install -D prettier eslint-config-prettier eslint-plugin-import eslint-plugin-jsx-a11y eslint-plugin-react eslint-plugin-react-hooks @typescript-eslint/eslint-plugin @typescript-eslint/parser\n\n# Initialize git\ngit init\ngit add .\ngit commit -m \"chore: scaffold Next.js (TS+Tailwind), add React Query, testing, linting\""
        },
        {
          "id": 2,
          "title": "Configure ESLint/Prettier",
          "description": "Prettier integration, scripts lint/format, recommended rules.",
          "acceptanceCriteria": [
            "npm run lint and npm run format succeed"
          ],
          "estimate": "0.5h",
          "priority": "P0",
          "dependencies": [
            1
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 3,
          "title": "Base layout + responsive nav",
          "description": "Implement app/layout.tsx and a simple header/footer, focus-visible styles.",
          "acceptanceCriteria": [
            "Mobile/tablet/desktop layouts verified"
          ],
          "estimate": "1h",
          "priority": "P0",
          "dependencies": [
            1,
            2
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 4,
          "title": "Add TanStack Query provider",
          "description": "Initialize QueryClient in root; add devtools in dev.",
          "acceptanceCriteria": [
            "React Query devtools visible in dev"
          ],
          "estimate": "0.5h",
          "priority": "P0",
          "dependencies": [
            1
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 5,
          "title": "IngredientInput component (MVP)",
          "description": "Tag input with add/remove via keyboard; accessible labels; basic suggestions list.",
          "acceptanceCriteria": [
            "Add via Enter/comma",
            "Remove via Backspace",
            "Tab/arrow navigation",
            "ARIA labels set"
          ],
          "estimate": "2h",
          "priority": "P0",
          "dependencies": [
            3
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 6,
          "title": "TheMealDB fetch helper (mock mode)",
          "description": "Create typed fetchers with AbortController; add mock responses for offline/demo.",
          "acceptanceCriteria": [
            "Helper returns mock on flag",
            "Aborts on rapid input"
          ],
          "estimate": "1.5h",
          "priority": "P0",
          "dependencies": [
            4
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 7,
          "title": "Debounced search orchestrator (basic)",
          "description": "Fan-out per ingredient; simple intersection; 300ms debounce; cancellation.",
          "acceptanceCriteria": [
            "Intersection works with multiple tags",
            "No race conditions"
          ],
          "estimate": "1.5h",
          "priority": "P0",
          "dependencies": [
            6
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 8,
          "title": "ResultsGrid with skeletons (placeholder cards)",
          "description": "Grid responsive columns; skeleton loading states; basic card info.",
          "acceptanceCriteria": [
            "Loading shows skeletons",
            "Cards render with mock data"
          ],
          "estimate": "1.5h",
          "priority": "P0",
          "dependencies": [
            5,
            7
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 9,
          "title": "Demo route /demo wiring",
          "description": "Create simple page assembling IngredientInput + ResultsGrid with mock data toggle.",
          "acceptanceCriteria": [
            "/demo loads and demo flow works without API"
          ],
          "estimate": "0.5h",
          "priority": "P0",
          "dependencies": [
            5,
            8
          ],
          "assignee": "Student",
          "status": "pending"
        },
        {
          "id": 10,
          "title": "README + scripts",
          "description": "Document setup, scripts, how to run tests; note env and mock mode.",
          "acceptanceCriteria": [
            "README complete; classmates can run dev locally"
          ],
          "estimate": "0.5h",
          "priority": "P0",
          "dependencies": [
            1,
            2,
            9
          ],
          "assignee": "Student",
          "status": "pending"
        }
      ]
    }
  },
  "sprint-0": {
    "tasks": [],
    "metadata": {
      "created": "2025-10-27T20:02:47.504Z",
      "updated": "2025-10-27T20:02:47.513Z",
      "description": "Sprint 0 — Project scaffolding & core UX"
    }
  }
}